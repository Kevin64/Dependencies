<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aaaPROJECTaaa" xml:space="preserve">
    <value />
    <comment>ConstantsDLL.LogStrings.Generic</comment>
  </data>
  <data name="LOG_ACCESS_APCS" xml:space="preserve">
    <value>Accessing APCS</value>
  </data>
  <data name="LOG_AD_REGISTERED" xml:space="preserve">
    <value>Active Directory registered</value>
  </data>
  <data name="LOG_AGENT_NOT_EXIST" xml:space="preserve">
    <value>Agent not present in database</value>
  </data>
  <data name="LOG_APCS_REGISTERING" xml:space="preserve">
    <value>Registering on the APCS Server</value>
  </data>
  <data name="LOG_APPFILE_FOUND" xml:space="preserve">
    <value>Found dependency files</value>
  </data>
  <data name="LOG_APPFILE_NOT_FOUND" xml:space="preserve">
    <value>One or more missing dependency files</value>
  </data>
  <data name="LOG_ASSET_NOT_EXIST" xml:space="preserve">
    <value>Asset not present in database</value>
  </data>
  <data name="LOG_AUTOTHEME_CHANGE" xml:space="preserve">
    <value>Automatically selecting theme</value>
  </data>
  <data name="LOG_CHECKING_FOR_UPDATES" xml:space="preserve">
    <value>Checking for updates</value>
  </data>
  <data name="LOG_CLI_MODE" xml:space="preserve">
    <value>Arguments detected, starting in CLI mode. List of arguments</value>
  </data>
  <data name="LOG_CLOSING_ABOUTBOX" xml:space="preserve">
    <value>Closing About window</value>
  </data>
  <data name="LOG_CLOSING_CLI" xml:space="preserve">
    <value>Ending program sequence</value>
  </data>
  <data name="LOG_CLOSING_LOGIN_FORM" xml:space="preserve">
    <value>Finalizing login form</value>
  </data>
  <data name="LOG_CLOSING_MAIN_FORM" xml:space="preserve">
    <value>Finalizing main form</value>
  </data>
  <data name="LOG_CLOSING_PROCESSOR_FORM" xml:space="preserve">
    <value>Closing processor form</value>
  </data>
  <data name="LOG_CLOSING_RAM_FORM" xml:space="preserve">
    <value>Closing RAM form</value>
  </data>
  <data name="LOG_CLOSING_STORAGE_FORM" xml:space="preserve">
    <value>Closing storage form</value>
  </data>
  <data name="LOG_CLOSING_UPDATER_FORM" xml:space="preserve">
    <value>Closing updater window</value>
  </data>
  <data name="LOG_CLOSING_VIDEO_CARD_FORM" xml:space="preserve">
    <value>Closing video card form</value>
  </data>
  <data name="LOG_CONNECTING_GITHUB" xml:space="preserve">
    <value>Connecting to GitHub</value>
  </data>
  <data name="LOG_DARK_THEME_CHANGE" xml:space="preserve">
    <value>Switching to dark theme</value>
  </data>
  <data name="LOG_DEBUG_MODE" xml:space="preserve">
    <value>Running in DEBUG mode</value>
  </data>
  <data name="LOG_END_COLLECTING" xml:space="preserve">
    <value>Completion of hardware collection</value>
  </data>
  <data name="LOG_FETCHING_ASSET_DATA" xml:space="preserve">
    <value>Searching asset information</value>
  </data>
  <data name="LOG_FETCHING_LOCAL_DATA" xml:space="preserve">
    <value>Searching available buildings and types of hardware in the local file</value>
  </data>
  <data name="LOG_FETCHING_MODEL_DATA" xml:space="preserve">
    <value>Searching hardware model information</value>
  </data>
  <data name="LOG_FETCHING_SERVER_DATA" xml:space="preserve">
    <value>Searching available buildings and types of hardware</value>
  </data>
  <data name="LOG_FIRMWARE_MEDIA_OPERATION_TYPE" xml:space="preserve">
    <value>SATA/M.2 operating mode</value>
  </data>
  <data name="LOG_FIRMWARE_SECURE_BOOT" xml:space="preserve">
    <value>Secure Boot</value>
  </data>
  <data name="LOG_FIRMWARE_TPM" xml:space="preserve">
    <value>TPM version</value>
  </data>
  <data name="LOG_FIRMWARE_TYPE" xml:space="preserve">
    <value>Firmware type</value>
  </data>
  <data name="LOG_FIRMWARE_VERSION" xml:space="preserve">
    <value>Firmware version</value>
  </data>
  <data name="LOG_FIRMWARE_VIRTUALIZATION_TECHNOLOGY" xml:space="preserve">
    <value>Virtualization Technology</value>
  </data>
  <data name="LOG_GITHUB_UNREACHABLE" xml:space="preserve">
    <value>GitHub unreachable</value>
  </data>
  <data name="LOG_GUI_MODE" xml:space="preserve">
    <value>Missing arguments, starting in GUI mode</value>
  </data>
  <data name="LOG_HARDWARE_BRAND" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="LOG_HARDWARE_MODEL" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="LOG_HARDWARE_PASSED" xml:space="preserve">
    <value>Compliant configuration, ready for registration</value>
  </data>
  <data name="LOG_HARDWARE_SERIAL_NUMBER" xml:space="preserve">
    <value>Serial Number</value>
  </data>
  <data name="LOG_HEADER" xml:space="preserve">
    <value>------------------------ EXECUTION LOG ------------------------</value>
  </data>
  <data name="LOG_INIT" xml:space="preserve">
    <value>Start of execution</value>
  </data>
  <data name="LOG_INIT_LOGIN" xml:space="preserve">
    <value>Authenticating user</value>
  </data>
  <data name="LOG_INIT_REGISTRY" xml:space="preserve">
    <value>Starting registration process</value>
  </data>
  <data name="LOG_LIGHT_THEME_CHANGE" xml:space="preserve">
    <value>Switching to light theme</value>
  </data>
  <data name="LOG_LOGIN_FAILED" xml:space="preserve">
    <value>Authentication failed</value>
  </data>
  <data name="LOG_LOGIN_SUCCESS" xml:space="preserve">
    <value>Authentication performed successfully</value>
  </data>
  <data name="LOG_MODEL_NOT_EXIST" xml:space="preserve">
    <value>Model not present in database</value>
  </data>
  <data name="LOG_NETWORK_HOSTNAME" xml:space="preserve">
    <value>Hostname</value>
  </data>
  <data name="LOG_NETWORK_IP_ADDRESS" xml:space="preserve">
    <value>Primary IP Address</value>
  </data>
  <data name="LOG_NETWORK_MAC_ADDRESS" xml:space="preserve">
    <value>Primary MAC Address</value>
  </data>
  <data name="LOG_NO_INTERNET_AVAILABLE" xml:space="preserve">
    <value>No internet connection available</value>
  </data>
  <data name="LOG_OFFLINE_MODE" xml:space="preserve">
    <value>Offline execution mode</value>
  </data>
  <data name="LOG_OFFLINE_SERVER" xml:space="preserve">
    <value>Server is OFFLINE</value>
  </data>
  <data name="LOG_ONLINE_SERVER" xml:space="preserve">
    <value>Server is ONLINE</value>
  </data>
  <data name="LOG_OPENING_ABOUTBOX" xml:space="preserve">
    <value>Opening About window</value>
  </data>
  <data name="LOG_OPENING_GITHUB" xml:space="preserve">
    <value>Accessing release on GitHub</value>
  </data>
  <data name="LOG_OPENING_LOG" xml:space="preserve">
    <value>Opening event log</value>
  </data>
  <data name="LOG_OPENING_PROCESSOR_FORM" xml:space="preserve">
    <value>Opening processor form</value>
  </data>
  <data name="LOG_OPENING_RAM_FORM" xml:space="preserve">
    <value>Opening RAM form</value>
  </data>
  <data name="LOG_OPENING_STORAGE_FORM" xml:space="preserve">
    <value>Operning storage form</value>
  </data>
  <data name="LOG_OPENING_VIDEO_CARD_FORM" xml:space="preserve">
    <value>Opening video card form</value>
  </data>
  <data name="LOG_OPERATING_SYSTEM" xml:space="preserve">
    <value>Operating system</value>
  </data>
  <data name="LOG_PARAMETER_FILE_FOUND" xml:space="preserve">
    <value>Parameters file found</value>
  </data>
  <data name="LOG_PARAMETER_FILE_NOT_FOUND" xml:space="preserve">
    <value>Parameters file not found</value>
  </data>
  <data name="LOG_PENDENCY_ERROR" xml:space="preserve">
    <value>Issues detected in the configuration</value>
  </data>
  <data name="LOG_PINGGING_SERVER" xml:space="preserve">
    <value>Checking server availability</value>
  </data>
  <data name="LOG_PROCESSOR" xml:space="preserve">
    <value>Processor</value>
  </data>
  <data name="LOG_PROCESSOR_CACHE" xml:space="preserve">
    <value>Processor cache</value>
  </data>
  <data name="LOG_PROCESSOR_CORES" xml:space="preserve">
    <value>Processor cores</value>
  </data>
  <data name="LOG_PROCESSOR_FREQUENCY" xml:space="preserve">
    <value>Processor frequency</value>
  </data>
  <data name="LOG_PROCESSOR_ID" xml:space="preserve">
    <value>Processor ID</value>
  </data>
  <data name="LOG_PROCESSOR_NAME" xml:space="preserve">
    <value>Processor name</value>
  </data>
  <data name="LOG_PROCESSOR_THREADS" xml:space="preserve">
    <value>Processor threads</value>
  </data>
  <data name="LOG_RAM" xml:space="preserve">
    <value>RAM</value>
  </data>
  <data name="LOG_RAM_AMOUNT" xml:space="preserve">
    <value>RAM module memory amount</value>
  </data>
  <data name="LOG_RAM_FREQUENCY" xml:space="preserve">
    <value>RAM module frequency</value>
  </data>
  <data name="LOG_RAM_MANUFACTURER" xml:space="preserve">
    <value>RAM module manufacturer</value>
  </data>
  <data name="LOG_RAM_PART_NUMBER" xml:space="preserve">
    <value>RAM module part number</value>
  </data>
  <data name="LOG_RAM_SERIAL_NUMBER" xml:space="preserve">
    <value>RAM module serial number</value>
  </data>
  <data name="LOG_RAM_SLOT" xml:space="preserve">
    <value>RAM module slot</value>
  </data>
  <data name="LOG_RAM_TYPE" xml:space="preserve">
    <value>RAM module type</value>
  </data>
  <data name="LOG_REGISTRY_FINISHED" xml:space="preserve">
    <value>Registration finished</value>
  </data>
  <data name="LOG_RELEASE_MODE" xml:space="preserve">
    <value>Running in RELEASE mode</value>
  </data>
  <data name="LOG_SAMEWORD_NOFIRSTREGISTRY" xml:space="preserve">
    <value>One or more 'same' arguments detected, however there is no existing record for the current asset. Computer must be registered first via GUI or via CLI with all command line options correctly filled in</value>
  </data>
  <data name="LOG_SERVER_DATA" xml:space="preserve">
    <value>Server and port</value>
  </data>
  <data name="LOG_SERVICES_MADE" xml:space="preserve">
    <value>Services made</value>
  </data>
  <data name="LOG_SHOWING_HELP" xml:space="preserve">
    <value>Displaying list of commands</value>
  </data>
  <data name="LOG_START_COLLECTING" xml:space="preserve">
    <value>Collecting asset data</value>
  </data>
  <data name="LOG_START_COLLECT_THREAD" xml:space="preserve">
    <value>Initializing collection procedure thread</value>
  </data>
  <data name="LOG_STATUS_ERROR" xml:space="preserve">
    <value>&lt;ERROR&gt;</value>
  </data>
  <data name="LOG_STATUS_INFO" xml:space="preserve">
    <value>&lt;INFORMATION&gt;</value>
  </data>
  <data name="LOG_STATUS_MISC" xml:space="preserve">
    <value>&lt;MISCELLANEOUS&gt;</value>
  </data>
  <data name="LOG_STATUS_WARNING" xml:space="preserve">
    <value>&lt;WARNING&gt;</value>
  </data>
  <data name="LOG_STORAGE" xml:space="preserve">
    <value>Storage</value>
  </data>
  <data name="LOG_STORAGE_CONNECTION" xml:space="preserve">
    <value>Storage device connection</value>
  </data>
  <data name="LOG_STORAGE_ID" xml:space="preserve">
    <value>Storage device ID</value>
  </data>
  <data name="LOG_STORAGE_MODEL" xml:space="preserve">
    <value>Storage device model</value>
  </data>
  <data name="LOG_STORAGE_SERIAL_NUMBER" xml:space="preserve">
    <value>Storage device serial number</value>
  </data>
  <data name="LOG_STORAGE_SIZE" xml:space="preserve">
    <value>Storage device size</value>
  </data>
  <data name="LOG_STORAGE_SMART_STATUS" xml:space="preserve">
    <value>Storage device S.M.A.R.T. status</value>
  </data>
  <data name="LOG_STORAGE_TYPE" xml:space="preserve">
    <value>Storage device type</value>
  </data>
  <data name="LOG_THEME" xml:space="preserve">
    <value>Active theme</value>
  </data>
  <data name="LOG_THEME_DARK" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="LOG_THEME_LIGHT" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="LOG_UPDATE_CHECK_IMPOSSIBLE" xml:space="preserve">
    <value>Unable to check for updates</value>
  </data>
  <data name="LOG_VIDEO_CARD" xml:space="preserve">
    <value>Video card</value>
  </data>
  <data name="LOG_VIDEO_CARD_ID" xml:space="preserve">
    <value>Video card ID</value>
  </data>
  <data name="LOG_VIDEO_CARD_NAME" xml:space="preserve">
    <value>Video card name</value>
  </data>
  <data name="LOG_VIDEO_CARD_RAM" xml:space="preserve">
    <value>Video card memory</value>
  </data>
</root>