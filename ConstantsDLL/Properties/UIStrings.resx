<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aaaPROJECTaaa" xml:space="preserve">
    <value />
    <comment>ConstantsDLL.UIStrings.Generic</comment>
  </data>
  <data name="ABSENT" xml:space="preserve">
    <value>Absent</value>
  </data>
  <data name="ACTIVATED" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ALREADY_RUNNING" xml:space="preserve">
    <value>There is already an instance of the program running!</value>
  </data>
  <data name="ASSET_ADDED" xml:space="preserve">
    <value>Asset added</value>
  </data>
  <data name="ASSET_DROPPED" xml:space="preserve">
    <value>Asset disposed, registration cancelled. Revert the dispose and try again</value>
  </data>
  <data name="ASSET_NOT_ADDED" xml:space="preserve">
    <value>Asset not added</value>
  </data>
  <data name="ASSET_NOT_REGISTERED" xml:space="preserve">
    <value>Assets not initially registered by the 'Asset Information and Registration' software. First register and then try again.</value>
  </data>
  <data name="ASSET_NOT_UPDATED" xml:space="preserve">
    <value>Asset not updated</value>
  </data>
  <data name="ASSET_UPDATED" xml:space="preserve">
    <value>Asset updated</value>
  </data>
  <data name="CANCEL_EXECUTION" xml:space="preserve">
    <value>Clear delivery data and cancel run on next boot</value>
  </data>
  <data name="CANCEL_EXECUTION_RES_ERROR" xml:space="preserve">
    <value>Delete delivery data</value>
  </data>
  <data name="DEACTIVATED" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="DO_EXECUTION" xml:space="preserve">
    <value>Send delivery data and run on next boot</value>
  </data>
  <data name="DO_EXECUTION_RES_ERROR" xml:space="preserve">
    <value>Send delivery data</value>
  </data>
  <data name="ERROR_WINDOWTITLE" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FILL_FORM" xml:space="preserve">
    <value>Fill in the required fields!</value>
  </data>
  <data name="FILL_IN_SERVER_DETAILS" xml:space="preserve">
    <value>Fill in the server data</value>
  </data>
  <data name="FILL_IN_YOUR_CREDENTIALS" xml:space="preserve">
    <value>Fill in your credentials.</value>
  </data>
  <data name="FINALE_SCREEN" xml:space="preserve">
    <value>Finishing up</value>
  </data>
  <data name="FINISH_TEXT" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="FREE" xml:space="preserve">
    <value>Free</value>
  </data>
  <data name="INTRANET_REQUIRED" xml:space="preserve">
    <value>Intranet connection required.</value>
  </data>
  <data name="INTRO_SCREEN" xml:space="preserve">
    <value>Intro</value>
  </data>
  <data name="INVALID_CREDENTIALS" xml:space="preserve">
    <value>Invalid credentials. Try again.</value>
  </data>
  <data name="KEY_FINISH" xml:space="preserve">
    <value>Press Enter to close...</value>
  </data>
  <data name="LIST_MODE_GUI_FORMAT" xml:space="preserve">
    <value>Formatting</value>
  </data>
  <data name="LIST_MODE_GUI_MAINTENANCE" xml:space="preserve">
    <value>Maintenance</value>
  </data>
  <data name="LIST_NO_0" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="LIST_NO_1" xml:space="preserve">
    <value>N</value>
  </data>
  <data name="LIST_NO_2" xml:space="preserve">
    <value>n</value>
  </data>
  <data name="LIST_STANDARD_GUI_EMPLOYEE" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="LIST_STANDARD_GUI_STUDENT" xml:space="preserve">
    <value>Student</value>
  </data>
  <data name="LIST_YES_0" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="LIST_YES_1" xml:space="preserve">
    <value>Y</value>
  </data>
  <data name="LIST_YES_2" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="LOGFILE_EXISTS" xml:space="preserve">
    <value>Found log file, adding information</value>
  </data>
  <data name="LOGFILE_NOTEXISTS" xml:space="preserve">
    <value>Nonexistent log file, creating new file</value>
  </data>
  <data name="NEW_VERSION_AVAILABLE" xml:space="preserve">
    <value>New version available!</value>
  </data>
  <data name="NEXT_TEXT" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NOT_DETERMINED" xml:space="preserve">
    <value>Not determined</value>
  </data>
  <data name="NOT_EXISTANT" xml:space="preserve">
    <value>Nonexistent</value>
  </data>
  <data name="NOT_SUPPORTED" xml:space="preserve">
    <value>Not supported</value>
  </data>
  <data name="NO_NEW_VERSION_AVAILABLE" xml:space="preserve">
    <value>Your software is up-to-date</value>
  </data>
  <data name="NO_PENDENCIES" xml:space="preserve">
    <value>No pending items found</value>
  </data>
  <data name="OF" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="PARAMETER_ERROR" xml:space="preserve">
    <value>One or more JSON file parameters are malformed</value>
  </data>
  <data name="PENDENCIES" xml:space="preserve">
    <value>pending item(s)</value>
  </data>
  <data name="RESOLUTION_WARNING" xml:space="preserve">
    <value>Insufficient resolution. This program only supports resolutions equal to or greater than {0}x{1}.</value>
  </data>
  <data name="SERVER_ERROR" xml:space="preserve">
    <value>Error in the APCS service</value>
  </data>
  <data name="SERVER_NOT_FOUND_ERROR" xml:space="preserve">
    <value>Server not found. Please select a valid server!</value>
  </data>
  <data name="SUCCESS_WINDOWTITLE" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="UNKNOWN" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="UNREGISTERED_MODEL" xml:space="preserve">
    <value>Unregistered hardware model</value>
  </data>
  <data name="WAIT_TEXT" xml:space="preserve">
    <value>Please wait</value>
  </data>
  <data name="WARNING_WINDOWTITLE" xml:space="preserve">
    <value>Notice</value>
  </data>
</root>